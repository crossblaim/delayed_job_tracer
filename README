= Delayed Job Tracer Plugin for Rails

Delayed Job Tracer is designed to monitor the delayed_job plugin, which was extracted from Shopify (http://github.com/tobi/delayed_job/).  It will alert you via e-mail if something goes wrong, such as the delayed_job process crashes or one of its jobs fails or takes too long to complete.

This plugin also detects wither e-mails sent through delayed_job are actually being delivered by sending test messages to an e-mail account then checking that account to ensure they were processed and dispatched via the delayed_job queue.  The e-mail delivery detection allows you to be notified if e-mails can't be sent out either because of delayed_job having choked or because of an issue with the e-mail account the application uses to send e-mail.


== Primary Features

* Sends an e-mail notification when delayed_job crashes or is unable to complete a job in a reasonable amount of time.
* Sends an e-mail notification when the Rails application is unable to successfully deliver e-mails via delayed_job.
* Circumvents the need for a process monitoring tool like Monit or God for delayed_job processes.
* Keeps memory usage low by working outside of Rails.


== Why use a Cron'd ruby process to monitor delayed_job and e-mail delivery?

* Cron is often considered to be more reliable than process monitoring tools like Monit or God.
* The cron'd ruby process only uses a modest amount of memory (~27MB) for a few seconds at regular intervals, whereas a rake task or runner would equate to the entire size of the Rails application, with a memory footprint that grows over time.


== Why use a Perl Script to send alert e-mails to admins?

* It's fast
* It doesn't rely on the Rails application
* It doesn't rely on the delayed_job process you're monitoring with this plugin


== Prerequisites

* mms2r gem (http://github.com/monde/mms2r)
* tmail gem (http://github.com/mikel/tmail)
* ruby-mysql gem (http://github.com/tmtm/ruby-mysql)
* sendEmail Perl script (http://caspian.dotconf.net/menu/Software/SendEmail)
* The necessary Perl SSL packages:

		- Works with Ubuntu 9.04 (Jaunty Jackalope) -
		
		apt-get install libnet-ssleay-perl 
		apt-get install libcrypt-ssleay-perl 
		apt-get install libio-socket-ssl-perl


== Installation

1) Install the plugin:

	script/plugin install git://github.com/kjohnston/delayed_job_tracer.git
	
2) Generate the config file:

	script/generate delayed_job_tracer
	
2) Mix the DelayedJobTracerMailer module into your ActionMailer mailer class (whatever you named it).

	Example:
	
		class Mailer < ActionMailer::Base
		  include DelayedJobTracerMailer
		end


== Configuration

* Create a 'Monitoring' label in the e-mail account you configure the plugin to send test messages to and a filter to move all incoming messages with '[Monitoring]' in the subject line to this folder (or label if you're using Gmail).  Set the name of this folder in the config/delayed_job_tracer_config.yml file - as it will be the folder that the ruby process checks for test messages.

* Add a cron job:

	- Example for running every 30 minutes, replace with your actual app and ruby locations -

	*/30 * * * * cd /opt/apps/app_name/current/vendor/plugins/delayed_job_tracer/ruby && /usr/local/bin/ruby runner.rb
	
* Finish configuring your settings in the config/delayed_job_tracer_config.yml file.  Your database and ActionMailer config will be applied via the generator, but you'll still need to provide an alternate e-mail account to send administrative notifications through, provide the admin's e-mail address and so forth.